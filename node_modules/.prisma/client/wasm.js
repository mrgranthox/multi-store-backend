
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  phone: 'phone',
  firstName: 'firstName',
  lastName: 'lastName',
  profileImage: 'profileImage',
  role: 'role',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isActive: 'isActive',
  preferredStoreId: 'preferredStoreId',
  lastLocationLat: 'lastLocationLat',
  lastLocationLng: 'lastLocationLng',
  emailVerified: 'emailVerified',
  phoneVerified: 'phoneVerified'
};

exports.Prisma.StoreScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  address: 'address',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  country: 'country',
  latitude: 'latitude',
  longitude: 'longitude',
  phone: 'phone',
  email: 'email',
  openingHours: 'openingHours',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  storeImage: 'storeImage',
  deliveryRadius: 'deliveryRadius',
  minOrderAmount: 'minOrderAmount'
};

exports.Prisma.StoreManagerScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  storeId: 'storeId',
  role: 'role',
  permissions: 'permissions',
  createdAt: 'createdAt',
  isActive: 'isActive'
};

exports.Prisma.StoreInventoryScalarFieldEnum = {
  id: 'id',
  storeId: 'storeId',
  productId: 'productId',
  quantityAvailable: 'quantityAvailable',
  reservedQuantity: 'reservedQuantity',
  reorderLevel: 'reorderLevel',
  maxStockLevel: 'maxStockLevel',
  lastRestocked: 'lastRestocked',
  isAvailable: 'isAvailable',
  priceOverride: 'priceOverride',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InventoryReservationScalarFieldEnum = {
  id: 'id',
  storeId: 'storeId',
  productId: 'productId',
  quantity: 'quantity',
  userId: 'userId',
  orderId: 'orderId',
  status: 'status',
  expiresAt: 'expiresAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ShoppingCartScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  storeId: 'storeId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isActive: 'isActive'
};

exports.Prisma.CartItemScalarFieldEnum = {
  id: 'id',
  cartId: 'cartId',
  productId: 'productId',
  quantity: 'quantity',
  priceAtTime: 'priceAtTime',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderScalarFieldEnum = {
  id: 'id',
  orderNumber: 'orderNumber',
  userId: 'userId',
  storeId: 'storeId',
  status: 'status',
  totalAmount: 'totalAmount',
  taxAmount: 'taxAmount',
  deliveryFee: 'deliveryFee',
  discountAmount: 'discountAmount',
  paymentMethod: 'paymentMethod',
  paymentStatus: 'paymentStatus',
  deliveryType: 'deliveryType',
  deliveryAddress: 'deliveryAddress',
  estimatedPickupTime: 'estimatedPickupTime',
  actualPickupTime: 'actualPickupTime',
  specialInstructions: 'specialInstructions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OrderItemScalarFieldEnum = {
  id: 'id',
  orderId: 'orderId',
  productId: 'productId',
  productName: 'productName',
  quantity: 'quantity',
  unitPrice: 'unitPrice',
  totalPrice: 'totalPrice',
  specialInstructions: 'specialInstructions'
};

exports.Prisma.UserAddressScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  title: 'title',
  addressLine1: 'addressLine1',
  addressLine2: 'addressLine2',
  city: 'city',
  state: 'state',
  zipCode: 'zipCode',
  country: 'country',
  latitude: 'latitude',
  longitude: 'longitude',
  isDefault: 'isDefault',
  createdAt: 'createdAt'
};

exports.Prisma.DeviceTokenScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  deviceId: 'deviceId',
  platform: 'platform',
  token: 'token',
  createdAt: 'createdAt',
  isActive: 'isActive'
};

exports.Prisma.UserSessionScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  sessionToken: 'sessionToken',
  deviceType: 'deviceType',
  deviceId: 'deviceId',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  createdAt: 'createdAt',
  expiresAt: 'expiresAt',
  isActive: 'isActive'
};

exports.Prisma.PushNotificationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  storeId: 'storeId',
  title: 'title',
  message: 'message',
  type: 'type',
  data: 'data',
  sentAt: 'sentAt',
  readAt: 'readAt',
  isRead: 'isRead'
};

exports.Prisma.IdempotencyKeyScalarFieldEnum = {
  id: 'id',
  key: 'key',
  userId: 'userId',
  requestHash: 'requestHash',
  response: 'response',
  status: 'status',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  strapiId: 'strapiId',
  name: 'name',
  slug: 'slug',
  description: 'description',
  image: 'image',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProductScalarFieldEnum = {
  id: 'id',
  strapiId: 'strapiId',
  name: 'name',
  slug: 'slug',
  description: 'description',
  sku: 'sku',
  price: 'price',
  currency: 'currency',
  images: 'images',
  isActive: 'isActive',
  featured: 'featured',
  publishedAt: 'publishedAt',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  categoryId: 'categoryId'
};

exports.Prisma.BannerScalarFieldEnum = {
  id: 'id',
  strapiId: 'strapiId',
  title: 'title',
  description: 'description',
  image: 'image',
  link: 'link',
  isActive: 'isActive',
  startDate: 'startDate',
  endDate: 'endDate',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.PromotionScalarFieldEnum = {
  id: 'id',
  strapiId: 'strapiId',
  name: 'name',
  description: 'description',
  discountType: 'discountType',
  discountValue: 'discountValue',
  minOrderAmount: 'minOrderAmount',
  maxDiscountAmount: 'maxDiscountAmount',
  code: 'code',
  isActive: 'isActive',
  startDate: 'startDate',
  endDate: 'endDate',
  applicableProducts: 'applicableProducts',
  applicableCategories: 'applicableCategories',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.OrderStatus = exports.$Enums.OrderStatus = {
  pending: 'pending',
  confirmed: 'confirmed',
  preparing: 'preparing',
  ready: 'ready',
  completed: 'completed',
  cancelled: 'cancelled'
};

exports.PaymentStatus = exports.$Enums.PaymentStatus = {
  pending: 'pending',
  paid: 'paid',
  failed: 'failed',
  refunded: 'refunded'
};

exports.DeliveryType = exports.$Enums.DeliveryType = {
  pickup: 'pickup',
  delivery: 'delivery'
};

exports.ReservationStatus = exports.$Enums.ReservationStatus = {
  reserved: 'reserved',
  used: 'used',
  released: 'released',
  expired: 'expired',
  cancelled: 'cancelled'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  order_update: 'order_update',
  promotion: 'promotion',
  general: 'general'
};

exports.IdempotencyStatus = exports.$Enums.IdempotencyStatus = {
  in_progress: 'in_progress',
  completed: 'completed',
  failed: 'failed'
};

exports.Prisma.ModelName = {
  User: 'User',
  Store: 'Store',
  StoreManager: 'StoreManager',
  StoreInventory: 'StoreInventory',
  InventoryReservation: 'InventoryReservation',
  ShoppingCart: 'ShoppingCart',
  CartItem: 'CartItem',
  Order: 'Order',
  OrderItem: 'OrderItem',
  UserAddress: 'UserAddress',
  DeviceToken: 'DeviceToken',
  UserSession: 'UserSession',
  PushNotification: 'PushNotification',
  IdempotencyKey: 'IdempotencyKey',
  Category: 'Category',
  Product: 'Product',
  Banner: 'Banner',
  Promotion: 'Promotion'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/edward-nyame/Desktop/multi-store/multi-store-backend/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-3.0.x",
        "native": true
      }
    ],
    "previewFeatures": [
      "multiSchema"
    ],
    "sourceFilePath": "/home/edward-nyame/Desktop/multi-store/multi-store-backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider        = \"prisma-client-js\"\n  previewFeatures = [\"multiSchema\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n  schemas  = [\"backend\", \"shared\"]\n}\n\nmodel User {\n  id               String             @id @default(uuid())\n  email            String             @unique\n  password         String\n  phone            String?\n  firstName        String?\n  lastName         String?\n  profileImage     String?\n  role             String             @default(\"user\")\n  createdAt        DateTime           @default(now())\n  updatedAt        DateTime           @updatedAt\n  isActive         Boolean            @default(true)\n  preferredStoreId String?\n  lastLocationLat  Float?\n  lastLocationLng  Float?\n  emailVerified    Boolean            @default(false)\n  phoneVerified    Boolean            @default(false)\n  pushTokens       DeviceToken[]\n  orders           Order[]\n  PushNotification PushNotification[]\n  carts            ShoppingCart[]\n  storeManagers    StoreManager[]\n  addresses        UserAddress[]\n  sessions         UserSession[]\n\n  @@map(\"users\")\n  @@schema(\"backend\")\n}\n\nmodel Store {\n  id               String             @id @default(uuid())\n  name             String\n  description      String?\n  address          String?\n  city             String?\n  state            String?\n  zipCode          String?\n  country          String?\n  latitude         Float\n  longitude        Float\n  phone            String?\n  email            String?\n  openingHours     Json?\n  isActive         Boolean            @default(true)\n  createdAt        DateTime           @default(now())\n  updatedAt        DateTime           @updatedAt\n  storeImage       String?\n  deliveryRadius   Int                @default(10)\n  minOrderAmount   Decimal            @db.Decimal(10, 2)\n  orders           Order[]\n  PushNotification PushNotification[]\n  inventories      StoreInventory[]\n  managers         StoreManager[]\n\n  @@map(\"stores\")\n  @@schema(\"backend\")\n}\n\nmodel StoreManager {\n  id          String   @id @default(uuid())\n  userId      String\n  storeId     String\n  role        String\n  permissions Json?\n  createdAt   DateTime @default(now())\n  isActive    Boolean  @default(true)\n  store       Store    @relation(fields: [storeId], references: [id], onDelete: Cascade)\n  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"store_managers\")\n  @@schema(\"backend\")\n}\n\nmodel StoreInventory {\n  id                String    @id @default(uuid())\n  storeId           String\n  productId         String\n  quantityAvailable Int       @default(0)\n  reservedQuantity  Int       @default(0)\n  reorderLevel      Int?\n  maxStockLevel     Int?\n  lastRestocked     DateTime?\n  isAvailable       Boolean   @default(true)\n  priceOverride     Decimal?  @db.Decimal(10, 2)\n  createdAt         DateTime  @default(now())\n  updatedAt         DateTime  @updatedAt\n  store             Store     @relation(fields: [storeId], references: [id], onDelete: Cascade)\n  product           Product   @relation(fields: [productId], references: [id], onDelete: Cascade)\n\n  @@unique([storeId, productId])\n  @@index([storeId, productId])\n  @@map(\"store_inventory\")\n  @@schema(\"backend\")\n}\n\nmodel InventoryReservation {\n  id        String            @id @default(uuid())\n  storeId   String\n  productId String\n  quantity  Int\n  userId    String?\n  orderId   String?\n  status    ReservationStatus @default(reserved)\n  expiresAt DateTime\n  createdAt DateTime          @default(now())\n  updatedAt DateTime          @updatedAt\n\n  @@index([storeId, productId])\n  @@index([userId])\n  @@map(\"inventory_reservations\")\n  @@schema(\"backend\")\n}\n\nmodel ShoppingCart {\n  id        String     @id @default(uuid())\n  userId    String\n  storeId   String\n  createdAt DateTime   @default(now())\n  updatedAt DateTime   @updatedAt\n  isActive  Boolean    @default(true)\n  items     CartItem[]\n  user      User       @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId, storeId])\n  @@map(\"shopping_carts\")\n  @@schema(\"backend\")\n}\n\nmodel CartItem {\n  id          String       @id @default(uuid())\n  cartId      String\n  productId   String\n  quantity    Int\n  priceAtTime Decimal      @db.Decimal(10, 2)\n  createdAt   DateTime     @default(now())\n  updatedAt   DateTime     @updatedAt\n  cart        ShoppingCart @relation(fields: [cartId], references: [id], onDelete: Cascade)\n\n  @@map(\"cart_items\")\n  @@schema(\"backend\")\n}\n\nmodel Order {\n  id                  String        @id @default(uuid())\n  orderNumber         String        @unique\n  userId              String\n  storeId             String\n  status              OrderStatus   @default(pending)\n  totalAmount         Decimal       @db.Decimal(12, 2)\n  taxAmount           Decimal       @db.Decimal(12, 2)\n  deliveryFee         Decimal       @db.Decimal(12, 2)\n  discountAmount      Decimal       @db.Decimal(12, 2)\n  paymentMethod       String?\n  paymentStatus       PaymentStatus @default(pending)\n  deliveryType        DeliveryType?\n  deliveryAddress     Json?\n  estimatedPickupTime DateTime?\n  actualPickupTime    DateTime?\n  specialInstructions String?\n  createdAt           DateTime      @default(now())\n  updatedAt           DateTime      @updatedAt\n  items               OrderItem[]\n  store               Store         @relation(fields: [storeId], references: [id])\n  user                User          @relation(fields: [userId], references: [id])\n\n  @@index([userId, storeId])\n  @@index([userId, createdAt])\n  @@map(\"orders\")\n  @@schema(\"backend\")\n}\n\nmodel OrderItem {\n  id                  String  @id @default(uuid())\n  orderId             String\n  productId           String\n  productName         String\n  quantity            Int\n  unitPrice           Decimal @db.Decimal(10, 2)\n  totalPrice          Decimal @db.Decimal(12, 2)\n  specialInstructions String?\n  order               Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)\n  product             Product @relation(fields: [productId], references: [id], onDelete: Cascade)\n\n  @@map(\"order_items\")\n  @@schema(\"backend\")\n}\n\nmodel UserAddress {\n  id           String   @id @default(uuid())\n  userId       String\n  title        String\n  addressLine1 String\n  addressLine2 String?\n  city         String\n  state        String\n  zipCode      String\n  country      String\n  latitude     Float?\n  longitude    Float?\n  isDefault    Boolean  @default(false)\n  createdAt    DateTime @default(now())\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@map(\"user_addresses\")\n  @@schema(\"backend\")\n}\n\nmodel DeviceToken {\n  id        String   @id @default(uuid())\n  userId    String\n  deviceId  String\n  platform  String\n  token     String\n  createdAt DateTime @default(now())\n  isActive  Boolean  @default(true)\n  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@unique([deviceId, token])\n  @@map(\"device_tokens\")\n  @@schema(\"backend\")\n}\n\nmodel UserSession {\n  id           String   @id @default(uuid())\n  userId       String\n  sessionToken String   @unique\n  deviceType   String?\n  deviceId     String?\n  ipAddress    String?\n  userAgent    String?\n  createdAt    DateTime @default(now())\n  expiresAt    DateTime\n  isActive     Boolean  @default(true)\n  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)\n\n  @@index([userId])\n  @@map(\"user_sessions\")\n  @@schema(\"backend\")\n}\n\nmodel PushNotification {\n  id      String           @id @default(uuid())\n  userId  String?\n  storeId String?\n  title   String\n  message String\n  type    NotificationType\n  data    Json?\n  sentAt  DateTime?\n  readAt  DateTime?\n  isRead  Boolean          @default(false)\n  store   Store?           @relation(fields: [storeId], references: [id])\n  user    User?            @relation(fields: [userId], references: [id])\n\n  @@map(\"push_notifications\")\n  @@schema(\"backend\")\n}\n\nmodel IdempotencyKey {\n  id          String            @id @default(uuid())\n  key         String\n  userId      String?\n  requestHash String?\n  response    Json?\n  status      IdempotencyStatus @default(in_progress)\n  createdAt   DateTime          @default(now())\n  updatedAt   DateTime          @updatedAt\n\n  @@unique([key, userId])\n  @@map(\"idempotency_keys\")\n  @@schema(\"backend\")\n}\n\nenum OrderStatus {\n  pending\n  confirmed\n  preparing\n  ready\n  completed\n  cancelled\n\n  @@schema(\"backend\")\n}\n\nenum PaymentStatus {\n  pending\n  paid\n  failed\n  refunded\n\n  @@schema(\"backend\")\n}\n\nenum DeliveryType {\n  pickup\n  delivery\n\n  @@schema(\"backend\")\n}\n\nenum ReservationStatus {\n  reserved\n  used\n  released\n  expired\n  cancelled\n\n  @@schema(\"backend\")\n}\n\nenum NotificationType {\n  order_update\n  promotion\n  general\n\n  @@schema(\"backend\")\n}\n\nenum IdempotencyStatus {\n  in_progress\n  completed\n  failed\n\n  @@schema(\"backend\")\n}\n\nmodel Category {\n  id          String    @id @default(uuid())\n  strapiId    Int       @unique\n  name        String\n  slug        String?   @unique\n  description String?\n  image       String?\n  isActive    Boolean   @default(true)\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n  products    Product[]\n\n  @@index([strapiId])\n  @@map(\"categories\")\n  @@schema(\"backend\")\n}\n\nmodel Product {\n  id          String           @id @default(uuid())\n  strapiId    Int              @unique\n  name        String\n  slug        String?          @unique\n  description String?\n  sku         String?          @unique\n  price       Decimal          @db.Decimal(10, 2)\n  currency    String           @default(\"USD\")\n  images      Json?\n  isActive    Boolean          @default(true)\n  featured    Boolean          @default(false)\n  publishedAt DateTime?\n  createdAt   DateTime         @default(now())\n  updatedAt   DateTime         @updatedAt\n  categoryId  String?\n  category    Category?        @relation(fields: [categoryId], references: [id], onDelete: SetNull)\n  inventories StoreInventory[]\n  orderItems  OrderItem[]\n  // MANUAL: Create GIN index for full-text search on (name, description)\n  // Example SQL: CREATE INDEX products_search_gin ON \"backend\".\"products\" USING GIN (to_tsvector('english', name || ' ' || coalesce(description, '')));\n\n  @@index([strapiId])\n  @@index([sku])\n  @@map(\"products\")\n  @@schema(\"backend\")\n}\n\nmodel Banner {\n  id          String    @id @default(uuid())\n  strapiId    Int       @unique\n  title       String\n  description String?\n  image       String\n  link        String?\n  isActive    Boolean   @default(true)\n  startDate   DateTime?\n  endDate     DateTime?\n  createdAt   DateTime  @default(now())\n  updatedAt   DateTime  @updatedAt\n\n  @@index([strapiId])\n  @@map(\"banners\")\n  @@schema(\"backend\")\n}\n\nmodel Promotion {\n  id                   String    @id @default(uuid())\n  strapiId             Int       @unique\n  name                 String\n  description          String?\n  discountType         String\n  discountValue        Decimal   @db.Decimal(10, 2)\n  minOrderAmount       Decimal?  @db.Decimal(10, 2)\n  maxDiscountAmount    Decimal?  @db.Decimal(10, 2)\n  code                 String?   @unique\n  isActive             Boolean   @default(true)\n  startDate            DateTime?\n  endDate              DateTime?\n  applicableProducts   Json?\n  applicableCategories Json?\n  createdAt            DateTime  @default(now())\n  updatedAt            DateTime  @updatedAt\n\n  @@index([strapiId])\n  @@index([code])\n  @@map(\"promotions\")\n  @@schema(\"backend\")\n}\n",
  "inlineSchemaHash": "8572c38b83c0baffe0af06fdb2f55347a79d3ef2ec8b54f576424b9549d99018",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profileImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"preferredStoreId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastLocationLat\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lastLocationLng\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"emailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"phoneVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"pushTokens\",\"kind\":\"object\",\"type\":\"DeviceToken\",\"relationName\":\"DeviceTokenToUser\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToUser\"},{\"name\":\"PushNotification\",\"kind\":\"object\",\"type\":\"PushNotification\",\"relationName\":\"PushNotificationToUser\"},{\"name\":\"carts\",\"kind\":\"object\",\"type\":\"ShoppingCart\",\"relationName\":\"ShoppingCartToUser\"},{\"name\":\"storeManagers\",\"kind\":\"object\",\"type\":\"StoreManager\",\"relationName\":\"StoreManagerToUser\"},{\"name\":\"addresses\",\"kind\":\"object\",\"type\":\"UserAddress\",\"relationName\":\"UserToUserAddress\"},{\"name\":\"sessions\",\"kind\":\"object\",\"type\":\"UserSession\",\"relationName\":\"UserToUserSession\"}],\"dbName\":\"users\"},\"Store\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"address\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"phone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"openingHours\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"storeImage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deliveryRadius\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"minOrderAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"orders\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToStore\"},{\"name\":\"PushNotification\",\"kind\":\"object\",\"type\":\"PushNotification\",\"relationName\":\"PushNotificationToStore\"},{\"name\":\"inventories\",\"kind\":\"object\",\"type\":\"StoreInventory\",\"relationName\":\"StoreToStoreInventory\"},{\"name\":\"managers\",\"kind\":\"object\",\"type\":\"StoreManager\",\"relationName\":\"StoreToStoreManager\"}],\"dbName\":\"stores\"},\"StoreManager\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"permissions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Store\",\"relationName\":\"StoreToStoreManager\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StoreManagerToUser\"}],\"dbName\":\"store_managers\"},\"StoreInventory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantityAvailable\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reservedQuantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"reorderLevel\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"maxStockLevel\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastRestocked\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isAvailable\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"priceOverride\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Store\",\"relationName\":\"StoreToStoreInventory\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"ProductToStoreInventory\"}],\"dbName\":\"store_inventory\"},\"InventoryReservation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"ReservationStatus\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"inventory_reservations\"},\"ShoppingCart\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"CartItem\",\"relationName\":\"CartItemToShoppingCart\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ShoppingCartToUser\"}],\"dbName\":\"shopping_carts\"},\"CartItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cartId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"priceAtTime\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"cart\",\"kind\":\"object\",\"type\":\"ShoppingCart\",\"relationName\":\"CartItemToShoppingCart\"}],\"dbName\":\"cart_items\"},\"Order\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"OrderStatus\"},{\"name\":\"totalAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"taxAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"deliveryFee\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"discountAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"paymentMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"paymentStatus\",\"kind\":\"enum\",\"type\":\"PaymentStatus\"},{\"name\":\"deliveryType\",\"kind\":\"enum\",\"type\":\"DeliveryType\"},{\"name\":\"deliveryAddress\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"estimatedPickupTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualPickupTime\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"specialInstructions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"items\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Store\",\"relationName\":\"OrderToStore\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"OrderToUser\"}],\"dbName\":\"orders\"},\"OrderItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"orderId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"unitPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"totalPrice\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"specialInstructions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"order\",\"kind\":\"object\",\"type\":\"Order\",\"relationName\":\"OrderToOrderItem\"},{\"name\":\"product\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"OrderItemToProduct\"}],\"dbName\":\"order_items\"},\"UserAddress\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressLine1\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addressLine2\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"state\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"zipCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isDefault\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserAddress\"}],\"dbName\":\"user_addresses\"},\"DeviceToken\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"platform\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"token\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"DeviceTokenToUser\"}],\"dbName\":\"device_tokens\"},\"UserSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionToken\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"expiresAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserSession\"}],\"dbName\":\"user_sessions\"},\"PushNotification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"storeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isRead\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"store\",\"kind\":\"object\",\"type\":\"Store\",\"relationName\":\"PushNotificationToStore\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"PushNotificationToUser\"}],\"dbName\":\"push_notifications\"},\"IdempotencyKey\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"key\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"requestHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"response\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"IdempotencyStatus\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"idempotency_keys\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"strapiId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"products\",\"kind\":\"object\",\"type\":\"Product\",\"relationName\":\"CategoryToProduct\"}],\"dbName\":\"categories\"},\"Product\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"strapiId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"slug\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sku\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"price\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"images\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"featured\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"publishedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"categoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"category\",\"kind\":\"object\",\"type\":\"Category\",\"relationName\":\"CategoryToProduct\"},{\"name\":\"inventories\",\"kind\":\"object\",\"type\":\"StoreInventory\",\"relationName\":\"ProductToStoreInventory\"},{\"name\":\"orderItems\",\"kind\":\"object\",\"type\":\"OrderItem\",\"relationName\":\"OrderItemToProduct\"}],\"dbName\":\"products\"},\"Banner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"strapiId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"image\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"link\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"banners\"},\"Promotion\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"strapiId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountValue\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"minOrderAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"maxDiscountAmount\",\"kind\":\"scalar\",\"type\":\"Decimal\"},{\"name\":\"code\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"startDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"endDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"applicableProducts\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"applicableCategories\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"promotions\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

